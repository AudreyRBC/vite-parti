@use 'sass:map';
@use 'sass:string';
@use 'sass:list';

// ----Font Face----//
// ----string replace

@function str-replace($string, $search, $replace: '') {
  $index: string.index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(
      str-slice($string, $index + str-length($search)),
      $search,
      $replace
    );
  }

  @return $string;
}

// ----font face mixin
@mixin font-face(
$name,
$path,
$weight: null,
$style: null,
$exts: eot woff2 woff ttf svg
) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_'),
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype',
  );

  @each $ext in $exts {
    $extmod: if(
      map.has-key($extmods, $ext),
      $ext + map.get($extmods, $ext),
      $ext
    );
    $format: if(map.has-key($formats, $ext), map.get($formats, $ext), $ext);
    $src: list.append(
      $src,
      url(quote($path + '.' + $extmod)) format(string.quote($format)),
      comma
    );
  }

  @font-face {
    font-family: string.quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
    font-display: swap;
  }
}
